@using FMASolutionsCore.Web.ShopBro
@model FMASolutionsCore.Web.ShopBro.ViewModels.DisplayOrderViewModel
@{
    ViewData["Title"] = "Items - Update Page";
    Layout = "~/Views/Shared/_LayoutShopBro.cshtml";
}

<div class="container rounded">
    <form class="form-signin">
        @if (Model != null && Model.StatusMessage != null)
        {
            <Label class="error-text">@(Model.StatusMessage) </Label>
        }
        <div class="row mb-2 no-gutters" id="OrderTitleRow">
            <div class="col-6 text-left" id="OrderIDHeading">            
                <h2 class="pr-2">Order Number:</h3>            
            </div>
            <div class="col-6 text-right" id="OrderStatusHeading">
                <h2 class="pl-2">Order Status:</h3>
            </div>
        </div>
            <div class="row mb-2 no-gutters" id="OrderTitleRow">
            <div class="col-6 text-left" id="OrderIDHeading">            
                @Html.DisplayFor(model => model.OrderHeader.OrderID, new { ReadOnly="true", Class="form-control mb-2 mr-1"})     
                @Html.HiddenFor(model => model.OrderHeader.OrderID)          
            </div>
            <div class="col-6 text-right" id="OrderStatusHeading">
                @Html.DisplayFor(model => model.OrderHeader.OrderStatus, new { ReadOnly="true", Class="form-control mb-2 ml-1 text-right"})            
            </div>
        </div>        
        <div class="container-fluid rounded mb-3 pt-2 pb-2 pr-2 pl-2 bg-dark text-light" id="CustomerInfoContainer">
            <h3>Customer Info:</h3>
            <div class="row no-gutters" id="SelectdCustomerRow">
                <div class="col-3 text-left customHeading" id="SelectedCustomerColumnHeading">
                    Customer:
                </div>
                <div class="col-9" id="SelectedCustomerControlColumn">
                    @Html.DisplayFor(model => model.OrderHeader.CustomerName, new { ReadOnly="true", Class="form-control mb-2 mr-1"})     
                </div>
            </div>
            <div class="row no-gutters customHeading pt-2" id="CustomerAddressHeadingRow">
                Customer Delivery Address:             
            </div>
            <div class="row no-gutters" id="CustomerAddressLine1">
                @Model.OrderHeader.AddressLine1 @Model.OrderHeader.AddressLine2
            </div>
            <div class="row no-gutters" id="CustomerAddressLine1">
                @Model.OrderHeader.CityArea
            </div>
            <div class="row no-gutters" id="CustomerAddressCity">
                @Model.OrderHeader.PostCode
            </div>
            <div class="row no-gutters" id="CustomerAddressCity">
                @Model.OrderHeader.Country
            </div>
        </div>

        <div class="container-fluid rounded mb-3 pt-2 pb-2 pl-0 pr-0 ml-0 mr-0 text-light bg-dark" id="ExistingItemsContainer">
            <div class="row">
                <div class="col-sm-12">
                    <div class="text-left">                    
                        <h3 class="pl-2">Current Items:</h3>
                        <table class="table table-striped table-dark" id="ExistingItemsTable">
                            <thead>
                                <tr>
                                    <th>Item Description</th>
                                    <th class="text-center">Qty</th>
                                    <th class="text-center">Unit Price</th>
                                    <th class="text-center">Item Status</th>
                                </tr>
                            </thead>
                            <tbody>
                            @for (var i = 0; i < Model.OrderItems.Count; i++)
                            {
                                <tr id="ItemRow@(Model.OrderItems[i].OrderItemID)">
                                    <td><span> 
                                        @Html.DisplayFor(model => model.OrderItems[i].ItemDescription, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.OrderItems[i].ItemDescription)
                                    </span></td>
                                    <td class="text-center"><span>
                                        @Html.DisplayFor(model => model.OrderItems[i].OrderItemQty, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.OrderItems[i].OrderItemQty)
                                    </span></td>
                                    <td class="text-center"><span>
                                        @Html.DisplayFor(model => model.OrderItems[i].OrderItemUnitPrice, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.OrderItems[i].OrderItemUnitPrice)                                    
                                    </span></td>  
                                    <td class="text-center"><span>                                    
                                        @Html.DisplayFor(model => model.OrderItems[i].OrderItemStatus, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.OrderItems[i].OrderItemStatus)                                    
                                    </span></td>
                                    @Html.HiddenFor(model => model.OrderItems[i].ItemID)
                                    @Html.HiddenFor(model => model.OrderItems[i].OrderItemID)
                                </tr>  
                            }
                            </tbody>                        
                        </table>
                        <div class="row">
                            <div class="col-sm-6">
                                <a href="/Order/EditItems/@Model.OrderHeader.OrderID" class="btn btn-outline-dark bg-light btn-block ml-0 mt-2 mb-2 ml-2 pl-0 pr-0">Edit Items</a>                            
                            </div>
                            <div class="col-sm-6 pr-4">                            
                                @if(Model.HasItemsAtEstimateStage)
                                {
                                    <a href="/DeliveryNote/DeliverItems/@Model.OrderHeader.OrderID" class="btn btn-outline-dark bg-light btn-block mt-2 mb-2">Deliver Items</a>
                                }                               
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-3">            
            @if(Model.HasItemsAtDeliveredStage)
            {
                <div class="col-sm-4"><a href="/Invoice/GenInvoice/@Model.OrderHeader.OrderID" class="btn btn-outline-dark btn-block mb-3">Generate Invoice</a></div>
            }
            @if(Model.DeliveryNotesForOrder.Count > 0)
            {
                <div class="dropdown">
                    <button class="btn btn-outline-dark text-light bg-dark mb-3 ml-3 mr-3 dropdown-toggle" type="button" id="deliveryNotesDropDown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Delivery Notes
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @foreach(var item in Model.DeliveryNotesForOrder)
                {
                        <a class="dropdown-item" href="/DeliveryNote/ViewDeliveryNote/@item">@item</a>
                }
                    </div>
                </div>
            }    
            @if(Model.InvoicesForOrder.Count > 0)
            {
                <div class="dropdown">
                    <button class="btn btn-outline-dark text-light bg-dark mb-3 mr-3 dropdown-toggle" type="button" id="invoicesDropDown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Invoices
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @foreach(var item in Model.InvoicesForOrder)
                {
                    <a class="dropdown-item" href="/Invoice/ViewInvoice/@item">@item</a>
                }
                    </div>
                </div>
            }   
                             
        </div>
        <div class="row">
                <div class="col-sm-12">
                    <a href="/Order/Search" class="btn btn-outline-dark btn-block mb-3">Back</a>
                </div>
        </div>
    </form>
</div>
 <script src="~/SiteAssets/js/order.js"></script>