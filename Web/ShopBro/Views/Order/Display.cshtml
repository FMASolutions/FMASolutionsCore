@using FMASolutionsCore.Web.ShopBro
@model FMASolutionsCore.Web.ShopBro.ViewModels.OrderViewModel
@{
    ViewData["Title"] = "Items - Update Page";
    Layout = "~/Views/Shared/_LayoutShopBro.cshtml";
}
<div id="DataRoot" style="display:none">
    <div id="OrderItemsRaw">
        @for (var i = 0; i < Model.ExistingItems.Count; i++)
        {
            <div class="OrderItemRaw">
                <span class="OrderItemDescriptionRaw">@(Model.ExistingItems[i].ItemDescription)</span>
                <span class="OrderItemUnitPriceRaw">@(Model.ExistingItems[i].UnitPrice)</span>
                <span class="OrderItemQtyRaw">@(Model.ExistingItems[i].Qty)</span>
                <span class="OrderItemItemIDRaw">@(Model.ExistingItems[i].ItemID)</span>
                <span class="OrderItemItemRowIDRaw">@(Model.ExistingItems[i].OrderItemRowID)</span>
                <span class="OrderItemStatusRaw">@(Model.ExistingItems[i].OrderItemStatus)</span>
            </div>
        }
    </div>
</div>

<div class="container rounded">
    <form class="form-signin">
        <div class="row mb-2 no-gutters" id="OrderTitleRow">
            <div class="col-6 text-left" id="OrderIDHeading">            
                <h2 class="pr-2">Order Number:</h3>            
            </div>
            <div class="col-6 text-right" id="OrderStatusHeading">
                <h2 class="pl-2">Order Status:</h3>
            </div>
        </div>
            <div class="row mb-2 no-gutters" id="OrderTitleRow">
            <div class="col-6 text-left" id="OrderIDHeading">            
                @Html.DisplayFor(model => model.OrderID, new { ReadOnly="true", Class="form-control mb-2 mr-1"})     
                @Html.HiddenFor(model => model.OrderID)          
            </div>
            <div class="col-6 text-right" id="OrderStatusHeading">
                @Html.DisplayFor(model => model.OrderStatus, new { ReadOnly="true", Class="form-control mb-2 ml-1 text-right"})            
            </div>
        </div>

        @if (Model != null && Model.StatusMessage != null)
        {
            <Label class="error-text">@(Model.StatusMessage) </Label>
        }
        <div class="container-fluid rounded mb-3 pt-2 pb-2 pr-2 pl-2 bg-dark text-light" id="CustomerInfoContainer">
            <h3>Customer Info:</h3>
            <div class="row no-gutters" id="SelectdCustomerRow">
                <div class="col-3 text-left customHeading" id="SelectedCustomerColumnHeading">
                    Customer:
                </div>
                <div class="col-9" id="SelectedCustomerControlColumn">
                    @(Html.DropDownListFor(
                        m => m.CustomerID,
                        new SelectList(Model.AvailableCustomers, "Key", "Value",Model.CustomerID),     
                        new { @class = "form-control bg-secondary text-light", @id = "SelectedCustomerControl", @disabled = "disabled"}
                    ))
                </div>
            </div>
            <div class="row no-gutters customHeading pt-2" id="CustomerAddressHeadingRow">
                Customer Delivery Address:             
            </div>
            <div class="row no-gutters" id="CustomerAddressLine1">
                36 Bewick Drive
            </div>
            <div class="row no-gutters" id="CustomerAddressLine1">
                Bakersfield
            </div>
            <div class="row no-gutters" id="CustomerAddressCity">
                Nottingham
            </div>
            <div class="row no-gutters" id="CustomerAddressPostCode">
                NG3 7GB
            </div>
            <div class="row no-gutters" id="CustomerAddressPostCode">
                United Kingdom
            </div>
        </div>

        <div class="container-fluid rounded mb-3 pt-2 pb-2 pl-0 pr-0 ml-0 mr-0 text-light bg-dark" id="ExistingItemsContainer">
            <div class="row">
                <div class="col-sm-12">
                    <div class="text-left">                    
                        <h3 class="pl-2">Current Items:</h3>
                        <table class="table table-striped table-dark" id="ExistingItemsTable">
                            <thead>
                                <tr>
                                    <th>Item Description</th>
                                    <th class="text-center">Qty</th>
                                    <th class="text-center">Unit Price</th>
                                    <th class="text-center">Item Status</th>
                                </tr>
                            </thead>
                            <tbody>
                            @for (var i = 0; i < Model.ExistingItems.Count; i++)
                            {
                                <tr id="ItemRow@(Model.ExistingItems[i].OrderItemRowID)">
                                    <td><span> 
                                        @Html.DisplayFor(model => model.ExistingItems[i].ItemDescription, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.ExistingItems[i].ItemDescription)
                                    </span></td>
                                    <td class="text-center"><span>
                                        @Html.DisplayFor(model => model.ExistingItems[i].Qty, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.ExistingItems[i].Qty)
                                    </span></td>
                                    <td class="text-center"><span>
                                        @Html.DisplayFor(model => model.ExistingItems[i].UnitPrice, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.ExistingItems[i].UnitPrice)                                    
                                    </span></td>  
                                    <td class="text-center"><span>                                    
                                        @Html.DisplayFor(model => model.ExistingItems[i].OrderItemStatus, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.ExistingItems[i].OrderItemStatus)                                    
                                    </span></td>
                                    @Html.HiddenFor(model => model.ExistingItems[i].ItemID)
                                    @Html.HiddenFor(model => model.ExistingItems[i].OrderItemRowID)
                                </tr>  
                            }
                            </tbody>                        
                        </table>
                        <div class="row">
                            <div class="col-sm-6">
                                <a href="/Order/EditItems/@Model.OrderID" class="btn btn-outline-dark bg-light btn-block ml-0 mt-2 mb-2 ml-2 pl-0 pr-0">Edit Items</a>                            
                            </div>
                            <div class="col-sm-6 pr-4">                            
                                @foreach(var status in Model.DistinctItemStatusList)
                                {
                                    @if(status == "Estimate")
                                    {
                                        <a href="/Order/DeliverItems/@Model.OrderID" class="btn btn-outline-dark bg-light btn-block mt-2 mb-2">Deliver Items</a>
                                    }
                                }
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            @if(Model.OrderStatus == "Complete")
            {
                <div class="col-sm-4"><a href="/Order/ViewDeliveryNote/@Model.OrderID" class="btn btn-outline-dark btn-block mb-3">View Del Notes</a></div>
            }   
            @if(Model.OrderStatus == "Delivered")
            {
                <div class="col-sm-4"><a href="/Order/ViewDeliveryNote/@Model.OrderID" class="btn btn-outline-dark btn-block mb-3">View Del Notes</a></div>
            }
            @foreach(var status in Model.DistinctItemStatusList)
            {
                @if(status == "Delivered")
                {
                    <div class="col-sm-4"><a href="/Order/GenInvoice/@Model.OrderID" class="btn btn-outline-dark btn-block mb-3">Generate Invoice</a></div>
                    
                }
                @if(status == "Complete")
                {
                    <div class="col-sm-4"><a href="/Order/ViewInvoice/@Model.OrderID" class="btn btn-outline-dark btn-block mb-3">View Invoice</a></div>
                }            
            }                        
        </div>
        <div class="row">
                <div class="col-sm-12">
                    <a href="/Order/Search" class="btn btn-outline-dark btn-block mb-3">Back</a>
                </div>
        </div>
    </form>
</div>
 <script src="~/SiteAssets/js/order.js"></script>