@using FMASolutionsCore.Web.ShopBro
@model FMASolutionsCore.Web.ShopBro.ViewModels.AmendOrderItemsViewModel
@{
    ViewData["Title"] = "Items - Update Page";
    Layout = "~/Views/Shared/_LayoutShopBro.cshtml";
}

<script src="~/SiteAssets/js/autoCompleteModule.js"></script>
<link rel="stylesheet" href="~/SiteAssets/css/autoCompleteModule.css">
<script>
    
</script>

<div id="DataRoot" style="display:none">
    <div id="OrderItemsRaw">
        @for (var i = 0; i < Model.ItemDetails.Count; i++)
        {
            <div class="OrderItemRaw">
                <span class="OrderItemDescriptionRaw">@(Model.ItemDetails[i].OrderItemDescription)</span>
                <span class="OrderItemUnitPriceRaw">@(Model.ItemDetails[i].OrderItemUnitPriceAfterDiscount)</span>
                <span class="OrderItemQtyRaw">@(Model.ItemDetails[i].OrderItemQty)</span>
                <span class="OrderItemItemIDRaw">@(Model.ItemDetails[i].ItemID)</span>
                <span class="OrderItemItemRowIDRaw">@(Model.ItemDetails[i].OrderItemID)</span>     
                <span class="OrderItemStatusRaw">@(Model.ItemDetails[i].OrderItemStatusValue)</span>           
            </div>
        }
    </div>
    <div id="ItemsRaw">
        @for (var i = 0; i < Model.AvailableItems.Count; i++)
        {
            <div class="ItemRaw">
                <span class="ItemIDRaw">@(Model.AvailableItems[i].ItemID)</span>
                <span class="ItemCodeRaw">@(Model.AvailableItems[i].ItemCode)</span>
                <span class="SubGroupIDRaw">@(Model.AvailableItems[i].SubGroupID)</span>
                <span class="ItemNameRaw">@(Model.AvailableItems[i].ItemName)</span>
                <span class="ItemDescriptionRaw">@(Model.AvailableItems[i].ItemDescription)</span>
                <span class="ItemUnitPriceRaw">@(Model.AvailableItems[i].ItemUnitPrice)</span>
                <span class="ItemUnitPriceWithMaxDiscountRaw">@(Model.AvailableItems[i].ItemUnitPriceWithMaxDiscount)</span>
                <span class="ItemAvailableQtyRaw">@(Model.AvailableItems[i].ItemAvailableQty)</span>
                <span class="ItemImageFilenameRaw">@(Model.AvailableItems[i].ItemImageFilename)</span>
                <span class="ItemCode">@(Model.AvailableItems[i].ItemCode)</span>
            </div>
        }
    </div>
</div>

<div class="container rounded">
    @if (Model != null && Model.StatusMessage != null)
    {
        <Label class="error-text">@(Model.StatusMessage) </Label>
    }
    <form class="form-signin">

        <div class="row mb-2 no-gutters" id="OrderTitleRow">
            <div class="col-6 text-left" id="OrderIDHeading">            
                <h2 class="pr-2">Order Number:</h3>            
            </div>
            <div class="col-6 text-right" id="OrderStatusHeading">
                <h2 class="pl-2">Order Status:</h3>
            </div>
        </div>

        <div class="row mb-2 no-gutters" id="OrderTitleRow">
            <div class="col-6 text-left" id="OrderIDHeading">            
                @Html.DisplayFor(model => model.HeaderDetail.OrderID, new { ReadOnly="true", Class="form-control mb-2 mr-1"})     
                @Html.HiddenFor(model => model.HeaderDetail.OrderID)          
            </div>
            <div class="col-6 text-right" id="OrderStatusHeading">
                @Html.DisplayFor(model => model.HeaderDetail.OrderStatusValue, new { ReadOnly="true", Class="form-control mb-2 ml-1 text-right"})            
            </div>
        </div>

        <div class="container-fluid rounded mb-3 pt-2 pb-2 pr-2 pl-2 bg-dark text-light" id="CustomerInfoContainer">
            <h3>Customer Info:</h3>
            <div class="row no-gutters" id="SelectdCustomerRow">
                <div class="col-12 text-left customHeading" id="SelectedCustomerControlColumn">
                    Customer: @Html.DisplayFor(m => m.HeaderDetail.CustomerName,new { ReadOnly="true", Class="form-control mb-2 mr-1"})
                </div>
            </div>
            <div class="row no-gutters customHeading pt-2" id="CustomerAddressHeadingRow">
                Customer Delivery Address:             
            </div>
            <div class="row no-gutters" id="AddressLine1And2">
                @Model.HeaderDetail.AddressLine1 @Model.HeaderDetail.AddressLine2
            </div>
            <div class="row no-gutters" id="AddressCityAreaName">
                @Model.HeaderDetail.CityAreaName
            </div>
            <div class="row no-gutters" id="AddressCityName">
                @Model.HeaderDetail.CityName
            </div>
            <div class="row no-gutters" id="AddressPostcode">
                @Model.HeaderDetail.AddressPostCode
            </div>
            <div class="row no-gutters" id="AddressCountry">
                @Model.HeaderDetail.CountryName
            </div>            
        </div>

        <div class="row">
            <div class="col-sm-6"><button type="submit" formaction=@Url.Action("ProcessAmendItems") formmethod="POST" class="btn btn-outline-dark btn-block mb-3">Save Changes</button></div>                     
            <div class="col-sm-6"><a href="/Order/Search/@Model.HeaderDetail.OrderID" class="btn btn-outline-dark btn-block mb-3">Back (Discard changes)</a></button></div>
        </div>

        <div class="container-fluid rounded mb-3 pt-2 pb-2 pl-0 pr-0 ml-0 mr-0 text-light bg-dark" id="ExistingItemsContainer">
            <div class="row">
                <div class="col-sm-12">
                    <div class="text-left">
                        <h3 class="pl-2">Current Items:</h3>
                        <table class="table table-striped table-dark" id="ExistingItemsTable">
                            <thead>
                                <tr>
                                    <th>Item Description</th>
                                    <th class="text-center">Qty</th>
                                    <th class="text-center">Price</th>
                                    <th class="text-center">Remove</th>
                                </tr>
                            </thead>
                            <tbody>
                            @for (var i = 0; i < Model.ItemDetails.Count; i++)
                            {
                                <tr id="ItemRow@(Model.ItemDetails[i].OrderItemID)">
                                    <td><span> 
                                        @Html.DisplayFor(model => model.ItemDetails[i].OrderItemDescription, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.ItemDetails[i].OrderItemDescription)
                                    </span></td>
                                    <td class="text-center"><span>
                                        @Html.DisplayFor(model => model.ItemDetails[i].OrderItemQty, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.ItemDetails[i].OrderItemQty)
                                    </span></td>
                                    <td class="text-center"><span>
                                        @Html.DisplayFor(model => model.ItemDetails[i].OrderItemUnitPriceAfterDiscount, new { ReadOnly="true", Class="form-control mb-2 ml-1"})
                                        @Html.HiddenFor(model => model.ItemDetails[i].OrderItemUnitPriceAfterDiscount)
                                    </span></td>
                                    @if (Model.ItemDetails[i].OrderItemStatusValue == "Estimate")
                                    { 
                                        <td class="ExistingItemsRemovalButton text-center">                                                                        
                                            <img class="icon" src="/SiteAssets/images/Icons/delete.svg" width="20">
                                        </td> 
                                    }          
                                    else
                                    {
                                        <td class="text-center"><span>                                                                           
                                            
                                        </span></td> 
                                    }                     
                                    @Html.HiddenFor(model => model.ItemDetails[i].ItemID)
                                    @Html.HiddenFor(model => model.ItemDetails[i].OrderItemID)
                                </tr>  
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="container-fluid mb-3 pt-2 pb-2 pr-2 pl-2 text-light bg-dark" id="AddSearchItemWrapper">
                <h3>Search and Add:</h3>
                <form autocomplete="off">
                    <span>
                    <div class="autocomplete text-dark">
                        Code:<input id="CodeInputSearch" type="text" name="myCode" placeholder="Code" class="form-control SearchItemControl text-dark mb-2">
                    </div>
                    </span>           
                </form>
                <span><input type="number" class="form-control SearchItemControl mb-2" placeholder="Qty" id="QtyInputSearch"></span>
                <span><input type="number" class="form-control SearchItemControl mb-2" placeholder="Price" id="PriceInputSearch"></span>
                <span><input type="button" class="btn btn-outline-light btn-block mb-2" value="Add Item" id="AddItemButtonSearch"></span>
        </div>

        <div class="container-fluid mb-3 pt-2 pb-2 pr-2 pl-2 text-light bg-secondary" id="ItemSelectorContainer">
            <h3>Item Selector:</h3>
            <div class="row">
                <div class="col-sm-6">
                    <div class="text-left" id="AvailableItemDropdown">
                        Item:
                        @(Html.DropDownList("SelectedItem", 
                            new SelectList(Model.AvailableItems, "ItemID", "ItemName",""),
                            "Select Item",
                            new { @class = "form-control" }
                        ))
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="text-left">
                        Qty: <input type="text" class="form-control SelectorItemControl" placeholder="Qty" id="QtyInput">
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="text-left">
                        Unit Price:  <input type="text" class="form-control SelectorItemControl" placeholder="Price" id="UnitPriceInput">
                    </div>
                </div>
            </div> 
            <div class="row">
                <div class="col-sm-12">
                    <div class="text-left">
                        <input type="button" value="Add Item" id="DDAddItemButton" class="btn btn-outline-light btn-block mb-3 mt-2">
                    </div>
                </div>
            </div>   
        </div>

        <div id="ItemAccordionWrapper">
            <h3 class="bg-dark text-light mb-0 pb-2">Item Hierarchy:</h2>
            @for (var i = 0; i < Model.StockHierarchy.ProductGroups.Count; i++)
            {
                <div class="ProductWrapper">
                    <h3 class="ProductHeading text-light mb-0">@(Model.StockHierarchy.ProductGroups[i].ProductGroupName)</h3>    
                    @for(var j = 0; j < Model.StockHierarchy.ProductGroups[i].AvailableSubs.Count; j++)
                    {
                        <div class="SubGroupWrapper mb-0 mt-0 pt-0 pb-2">
                            <h3 class="SubHeading mb-0 mt-0 pt-0 pb-0">@(Model.StockHierarchy.ProductGroups[i].AvailableSubs[j].SubGroupName)</h3>
                            <ul class="ItemList mb-0 pb-0">
                                @for(var k=0; k < Model.StockHierarchy.ProductGroups[i].AvailableSubs[j].AvailableItems.Items.Count; k++)
                                {
                                    <li class="btn-outline-dark pb-3 pl-1 pr-1 ">
                                        <span class="ItemDescritpion text-light ">@(Model.StockHierarchy.ProductGroups[i].AvailableSubs[j].AvailableItems.Items[k].ItemDescription)</span>
                                        <div class="row">
                                            <div class="col-6">
                                                <span><input type="number" placeholder="Qty" class="QtyInput form-control AccordItemControl"></span>
                                            </div>
                                            <div class="col-6">
                                                <span><input type="number" placeholder="Price" class="PriceInput form-control AccordItemControl"></span>
                                            </div>
                                        </div>
                                        <span><input type="button" value="Add Item" class="AddAccordItemButton form-control btn btn-outline-light btn-block mt-3"></span>
                                        <span style="display: none" class="ItemID">@(Model.StockHierarchy.ProductGroups[i].AvailableSubs[j].AvailableItems.Items[k].ItemID)</span>
                                        <span style="display: none" class="MinimumPrice">@(Model.StockHierarchy.ProductGroups[i].AvailableSubs[j].AvailableItems.Items[k].ItemUnitPriceWithMaxDiscount)</span>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            }
        </div>

        <form autocomplete="off">
            <div class="autocomplete" style="width:300px;">
                <input id="countryInput" type="text" name="myCountry" placeholder="Country">
            </div>            
        </form>
        <form autocomplete="off">
            <div class="autocomplete" style="width:300px;">
                <input id="cityInput" type="text" name="myCity" placeholder="City">
            </div>
        </form>

        <div class="row mt-3">        
            <div class="col-sm-6"><button type="submit" formaction=@Url.Action("ProcessAmendItems") formmethod="POST" class="btn btn-outline-dark btn-block mb-3">Save Changes</button></div>            
            <div class="col-sm-6"><a href="/Order/Search/@Model.HeaderDetail.OrderID" class="btn btn-outline-dark btn-block mb-3">Back (Discard changes)</a></div>        
        </div>
    </form>
</div>






<script>
    var countries = ["Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antigua & Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia & Herzegovina","Botswana","Brazil","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central Arfrican Republic","Chad","Chile","China","Colombia","Congo","Cook Islands","Costa Rica","Cote D Ivoire","Croatia","Cuba","Curacao","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Polynesia","French West Indies","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guam","Guatemala","Guernsey","Guinea","Guinea Bissau","Guyana","Haiti","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauro","Nepal","Netherlands","Netherlands Antilles","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","North Korea","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Pierre & Miquelon","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Korea","South Sudan","Spain","Sri Lanka","St Kitts & Nevis","St Lucia","St Vincent","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Timor L'Este","Togo","Tonga","Trinidad & Tobago","Tunisia","Turkey","Turkmenistan","Turks & Caicos","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Virgin Islands (US)","Yemen","Zambia","Zimbabwe"];
    var cities = ["Nottingham","Manchester","Birmingham","London","Glagow"];
    var availableCodes = [];

    @foreach (var d in Model.AvailableItems)
    {
        @:availableCodes.push("@d.ItemCode");
    }

    /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
    autocomplete(document.getElementById("countryInput"), countries);
    autocomplete(document.getElementById("cityInput"), cities);
    autocomplete(document.getElementById("CodeInputSearch"),availableCodes)
</script>

<script src="~/SiteAssets/js/order.js"></script>
